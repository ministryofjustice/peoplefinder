= editing_mode(building)
= form_for @person, builder: PersonFormBuilder, html: { multipart: true, class: person_form_class(@person, @activity) } do |f|

  - if @person.errors.any?
    .alert.alert-error
      %p= error_text('person.general_message')
      %ol.form-error-list
        - @person.errors.each do |field, error|
          %li
            = link_to "#{Person.human_attribute_name(field)} #{error.downcase}", "#person_#{field}"

  = f.submit class: 'button top-button'

  %p * mandatory field

  = f.form_group :given_name do
    = f.label :given_name, class: 'form-label-bold' do
      First name
      - if @person.errors.include?(:given_name)
        %span.error= @person.errors[:given_name].first
    = f.text_field :given_name, class: 'form-control'

  = f.form_group :surname do
    = f.label :surname, class: 'form-label-bold' do
      Surname
      - if @person.errors.include?(:surname)
        %span.error= @person.errors[:surname].first
    = f.text_field :surname, class: 'form-control'


  - if feature_enabled?("communities")
    = f.form_group :community_id do
      %label.form-label-bold{ for: :person_community_id } Community
      = f.select(:community_id, Community.all.map { |c| [c.name, c.id] }, { include_blank: true} )

  .form-group
    #contact-details
      %h2.line-above Contact details

      .phone_numbers
        = f.form_group :primary_phone_number do
          = f.label :primary_phone_number, 'Main phone number', class: 'form-label-bold'
          = f.text_field :primary_phone_number, class: 'form-control'
        = f.form_group :secondary_phone_number do
          = f.label :secondary_phone_number, 'Alternative phone number', class: 'form-label-bold'
          = f.text_field :secondary_phone_number, class: 'form-control'

      .emails
        = f.form_group :email do
          = f.label :email, class: 'form-label-bold' do
            = t(:email, scope: 'activerecord.attributes.person')
            - if @person.errors.include?(:email)
              %span.error= @person.errors[:email].first
          = f.text_field :email, class: 'form-control', readonly: @person.persisted?
          - if @person.persisted?
            %p.form-hint
              =t('.notes.email')
          = f.form_group :secondary_email do
            = f.label :secondary_email, class: 'form-label-bold'
            = f.text_field :secondary_email, class: 'form-control'

      = f.form_group :location_in_building do
        = f.label :location_in_building, class: 'form-label-bold' do
          Location in building
          %p.form-hint= info_text('location_in_building_hint')
        = f.text_field :location_in_building, class: 'form-control'

      = f.form_group :building do
        = f.label :building, class: 'form-label-bold' do
          Building
          %p.form-hint= info_text('building_hint')
        = f.text_field :building, class: 'form-control'

      = f.form_group :city do
        = f.label :city, class: 'form-label-bold' do
          City
          %p.form-hint= info_text('city_hint')
        = f.text_field :city, class: 'form-control'

  .form-group
    #memberships
      %h2.line-above Role
      = f.fields_for :memberships do |membership_f|
        = render 'membership_fields', membership_f: membership_f, org_structure: @org_structure

    = link_to 'Add another role', add_membership_people_path(id: @person.to_param),
      id: 'add_membership', class: 'button-secondary'

  .form-group.line-above
    %fieldset#working-days
      %legend.form-label-bold Working days
      %ul
        - Person::DAYS_WORKED.each do |day|
          %li
            = f.label day do
              = f.check_box day
              = day_name(day)


  =f.form_group :description do
    = f.label :description, class: 'form-label-bold' do
      Extra information
      %p.form-hint= info_text('notes_field_hint')
    = f.text_area :description, class: 'form-control'

  =f.form_group :profile_photo_id, class: 'line-above person-photo initial' do
    = f.label :profile_photo_id, class: 'form-label-bold' do
      Photo
    = f.hidden_field :profile_photo_id
    = f.hidden_field :crop_x
    = f.hidden_field :crop_y
    = f.hidden_field :crop_w
    = f.hidden_field :crop_h
    %p.form-hint.crop-hint= info_text('photo_crop_hint')

    %div.preview-box
      = profile_image_tag @person, class: 'preview'
    %p.hidden
      %a{href: '#', class: 'crop-again-button'} Crop image again
    %div.upload-button-bar
      %div.initial-state
        %label{ for: 'person-image', class: 'form-hint upload-hint' }= info_text('photo_upload_hint')
        %p
          %input{ name: 'profile_photo[image]', id: 'person-image', type: 'file', class: 'form-control file' }
          %a{href: '#', class: 'reset-image-button'} Reset to default
        %button.photo-upload-button.button.hidden Upload photo
        %p.form-hint.uploading-hint Uploading
        %button.crop-finished-button.button-secondary Finished

  .form-group.save-cancel-actions
    = f.submit 'Preview', name: 'preview', class: 'button-secondary'
    = f.submit class: 'button'
    .cancel
      = link_to 'Cancel and go to profile page', @person.new_record? ? :back : @person
